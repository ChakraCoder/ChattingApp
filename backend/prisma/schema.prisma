generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String             @id @default(auto()) @map("_id") @db.ObjectId
  firstName        String
  lastName         String
  userName         String?            @unique
  email            String             @unique
  password         String
  profileImage     String?
  isVerify         Boolean?
  otp              Int?
  otpExpiry        Int?
  createdAt        DateTime           @default(now()) @map("created_at")
  updatedAt        DateTime           @updatedAt @map("updated_at")
  messages         Message[]
  chatParticipants ChatParticipant[]
}

model Chat {
  id             String             @id @default(auto()) @map("_id") @db.ObjectId
  isGroupChat    Boolean            @default(false)
  groupName      String?
  createdAt      DateTime           @default(now())
  updatedAt      DateTime           @updatedAt
  messages       Message[]
  participants   ChatParticipant[]
}

model ChatParticipant {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  user        User        @relation(fields: [userId], references: [id])
  userId      String      @db.ObjectId
  chat        Chat        @relation(fields: [chatId], references: [id])
  chatId      String      @db.ObjectId
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Message {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  type           MessageType  @default(TEXT)
  content        String?
  mediaUrl       String?
  fileName       String?
  timestamp      DateTime     @default(now())
  sender         User         @relation(fields: [senderId], references: [id])
  senderId       String       @db.ObjectId
  chat           Chat         @relation(fields: [chatId], references: [id])
  chatId         String       @db.ObjectId
  readBy         String[]     @default([])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}


enum MessageType {
  TEXT
  IMAGE
  FILE
}
